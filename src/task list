todo: 1) Create models:         +
   - ShoppingCart;
   - Ticket;

todo: 2) Create DAO: +
   - ShoppingCartDao;
   public interface ShoppingCartDao {
       ShoppingCart add(ShoppingCart shoppingCart); +
       Optional<ShoppingCart> getByUser(User user); +
       void update(ShoppingCart shoppingCart); +

todo: 3) TicketDao (Hint: use this dao in the ShoppingCartService, method addSession): +
    - public interface TicketDao {
            Ticket add(Ticket ticket);}

todo: 4) Create service:
    - TicketService is not required. TicketDao is enough.
    - ShoppingCartService:
    public interface ShoppingCartService {
          /**
           * This method is responsible for adding a Ticket to the ShoppingCart
           * @param movieSession contains the information required for the ticket
           * @param user - the User who wants to buy the ticket for a specific movieSession
           */
          void addSession(MovieSession movieSession, User user);
          ShoppingCart getByUser(User user);
          void registerNewShoppingCart(User user);
          void clear(ShoppingCart shoppingCart);
      }

 todo: 5) In the mate/academy/Main.main() method create an instance of ShoppingCartService using injector and
 test all methods from it.

 todo: 6) Check the correct relation in MovieSession entity.        +
 - Model Ticket has relationships with MovieSession and User entities. Be careful choosing the type of these
 relationships. Remember that one user can buy many tickets, and many users can attend one movie session.

 todo: 7) Use @MapsId with ShoppingCart. Think about whether to use an annotation @GeneratedValue in ShoppingCart.
 todo: 8) For saving ShoppingCart use save() method instead of persist(). The reason is that ShoppingCart
 object will have the transient state before the session opened, but its User object will be detached.
 persist() method throws PersistenceException if working with detached entities, when save()
 returns it to managed state.

 todo: 9) Use method registerNewShoppingCart() in AuthenticationServiceImpl class in register() method.
 todo: 10) Try to think what should be called first userService.add(user) or registerNewShoppingCart().
 todo: 11) Try to think what should you do first in method addSession: ticketDao.add(ticket);
 or shoppingCartService.update();
 todo: 12) Remember to add catch blocks for operations of all types on DAO layer.




